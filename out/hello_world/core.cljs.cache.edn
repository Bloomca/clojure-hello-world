;; Analyzed by ClojureScript 1.7.58
{:use-macros nil, :excludes #{}, :name hello-world.core, :imports nil, :requires {om om.core, om.core om.core, dom om.dom, om.dom om.dom}, :uses nil, :defs {app-state {:name hello-world.core/app-state, :file "src/cljs/hello_world/core.cljs", :line 11, :column 1, :end-line 11, :end-column 19, :meta {:file "/Users/bloomca/projects/clojure/hello-world/src/cljs/hello_world/core.cljs", :line 11, :column 10, :end-line 11, :end-column 19}}, incrementCounter {:protocol-inline nil, :meta {:file "/Users/bloomca/projects/clojure/hello-world/src/cljs/hello_world/core.cljs", :line 17, :column 7, :end-line 17, :end-column 23, :arglists (quote ([data]))}, :name hello-world.core/incrementCounter, :variadic false, :file "src/cljs/hello_world/core.cljs", :end-column 23, :method-params ([data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([data]))}, t_hello_world$core19037 {:num-fields 3, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name hello-world.core/t_hello_world$core19037, :file "src/cljs/hello_world/core.cljs", :type true, :anonymous true, :column 9, :line 22, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_hello_world$core19037 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([data owner meta19038])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name hello-world.core/->t_hello_world$core19037, :variadic false, :file "src/cljs/hello_world/core.cljs", :method-params ([data owner meta19038]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 9, :factory :positional, :line 22, :max-fixed-arity 3, :fn-var true, :arglists (quote ([data owner meta19038])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, on-js-reload {:protocol-inline nil, :meta {:file "/Users/bloomca/projects/clojure/hello-world/src/cljs/hello_world/core.cljs", :line 32, :column 7, :end-line 32, :end-column 19, :arglists (quote ([]))}, :name hello-world.core/on-js-reload, :variadic false, :file "src/cljs/hello_world/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {om om.core, om.core om.core, dom om.dom, om.dom om.dom}, :cljs.analyzer/constants {:seen #{owner data :contacts meta19038 :counter :target :text}, :order [:text :counter :contacts data owner meta19038 :target]}, :doc nil}